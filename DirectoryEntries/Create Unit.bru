meta {
  name: Create Unit
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/ill/directory/entry
  body: json
  auth: inherit
}

body:json {
  // {
  //   "parent": {
  //     "id": "290bdc87-623a-4efb-8171-122def50dff6"
  //   },
  //   "name": "testCreateUnit",
  //   "slug": "tCU",
  //   "status": "managed",
  //   "id": {{uuid}}
  // }
}

script:pre-request {
  const { getCreds, getTenant } = require('@k-int/bruno-shared-scripts');
  const axios = require('axios'); 
  const dirUrl = `${getBaseUrl()}/ill/directory/entry` 
  console.log('dirUrl: %o',dirUrl)
  const returnObj = await axios.post(
  `${getBaseUrl()}/bl-users/login-with-expiry`,
    getCreds(),
  {
    headers:{
      "Content-type": "application/json",
      "x-okapi-tenant": getTenant(),
    }
  })
  .then(async (loginresp) => {
    return await axios.get(
     `${dirUrl}?filters=slug=rmTest5`,
      {
        headers:{
          "Content-type": "application/json",
          "x-okapi-tenant": getTenant(), 
          "Cookie": loginresp.headers["set-cookie"]
        }
      },
    )
  })
  
  //const testing = await axios.get(dirurl);
  console.log(`returnObj: %o`, returnObj.data[0].id);
  
}
